{"version":3,"sources":["components/statistics/PlotMenu.js","components/userAuth/UserContext.js","components/statistics/VictoryPlot.js","components/statistics/VictoryCollapsed.js","components/statistics/PlotSection.js","components/statistics/UserOverview.js","components/statistics/Stats.js","components/userAuth/LandingPage.js","components/Navbar.js","components/katafinder/SelectPanel.js","util/filters.js","components/katafinder/TextPanel.js","components/katafinder/Menu.js","components/katafinder/KataDescription.js","components/katafinder/KataList.js","components/katafinder/KataFinder.js","App.js","reportWebVitals.js","index.js"],"names":["PlotMenu","isCollapsed","setCollapsed","setNotCollapsed","SideBar","type","id","name","value","defaultChecked","onClick","htmlFor","styled","div","UserContext","React","createContext","UserProvider","props","useState","userSummary","setUserSummary","userPlots","setUserPlots","userCompleted","setUserCompleted","Provider","children","VictoryPlot","plotData","ticks","maxCount","Math","max","dataPoints","map","dp","y","i","ceil","push","theme","VictoryTheme","grayscale","domainPadding","x","height","style","labels","fontSize","text","language","fontWeight","textAnchor","dependentAxis","tickValues","independentAxis","horizontal","datum","labelComponent","barRatio","barWidth","data","fill","VictoryCollapsed","plotList","console","log","length","plotHeight","ChartContainer","padding","orientation","colorScale","pd","offset","sortKey","sortOrder","longLabel","PlotSection","languages","setIsCollapsed","useContext","urlList","process","username","useEffect","forEach","url","axios","method","then","resp","prev","catch","error","alert","PlotContainer","Plots","PlotGrid","p","UserOverview","loadedLanguages","loadingIcon","color","width","OverView","Data","Name","StyledA","href","target","clan","honor","leaderboardPosition","totalCompleted","skills","join","Chip","avgRankChip","label","overallRank","rankName","Languages","languageRanks","r","includes","rankChip","loadingChip","icon","undefined","a","backgroundColor","marginTop","Stats","user","slice","Fragment","Object","keys","StatsContainer","plot","lr","to","LandingPage","toRedirect","setToRedirect","usernameRef","useRef","setUser","TopPanel","LandingContainer","RegFormContainer","TextField","textAlign","inputRef","Button","margin","current","response","Navbar","isVisible","setIsVisible","NavContainer","LinkContainer","StyledLink","Link","SelectPanel","opts","filterState","filterChange","deleteFilter","multi","Panel","FormControl","background","paddingLeft","InputLabel","Select","labelId","multiple","onChange","o","MenuItem","DelIcon","size","FaRegTimesCircle","byLanguages","kata","state","every","lang","completedLanguages","byRank","rank","byTitle","title","RegExp","toLowerCase","test","TextPanel","handleTitleFilterChange","Menu","isLoading","filteredLength","setFiltered","setPage","setFilterState","languageOptions","filters","handleFilterChange","event","which","filteredList","filter","f","FilterMenu","Feedback","KataDescription","visible","setVisible","toggleVisibility","KataContainer","Header","completedAt","substring","indexOf","Icon","Details","Chips","langChip","tags","tag","tagChip","marginRight","KataList","filtered","page","k","codewarsId","Chevrons","KataFinder","setIsLoading","fetchAllKatas","get","FinderContainer","App","className","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aca2acc.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport default function PlotMenu({ isCollapsed, setCollapsed, setNotCollapsed }) {\n    return (\n        <SideBar>\n            <p>Select plot type:</p>\n            <div>\n                <input type=\"radio\" id=\"per language\" name=\"type\" value=\"per language\" defaultChecked={!isCollapsed} onClick={setNotCollapsed}></input>\n                <label htmlFor=\"per language\">Per language</label>\n            </div>\n            <div>\n                <input type=\"radio\" id=\"collapsed\" name=\"type\" value=\"collapsed\" defaultChecked={isCollapsed} onClick={setCollapsed}></input>\n                <label htmlFor=\"collapsed\">Collapsed</label>\n            </div>\n        </SideBar>\n    )\n}\n\n\nconst SideBar = styled.div`\n    width: 20%\n`","import React, { useState } from 'react';\n\n\nexport const UserContext = React.createContext();\n\nexport const UserProvider = (props) => {\n    \n    const [userSummary, setUserSummary] = useState({})\n    const [userPlots, setUserPlots] = useState([])\n    const [userCompleted, setUserCompleted] = useState([])\n\n    return (\n        <UserContext.Provider value={[userSummary, setUserSummary, userPlots, setUserPlots, userCompleted, setUserCompleted]}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n","import React from 'react'\nimport {VictoryChart, VictoryBar, VictoryTheme, VictoryAxis, VictoryLabel} from 'victory'\n\nexport default function VictoryPlot({plotData}) {\n    const ticks = []\n    const maxCount = Math.max(...plotData.dataPoints.map(dp => dp.y))\n    for (let i = 1; i < Math.ceil(maxCount / 5) + 1; i++){\n        ticks.push(i * 5)\n    }\n    return (\n        <VictoryChart\n            theme={VictoryTheme.grayscale}\n            domainPadding={{ x: 20 }}\n            height={400}\n            style={{labels: { fontSize: 30 }}}\n            >\n            <VictoryLabel text={plotData.language} style= {{fontSize: 30, fontWeight: \"bold\"}} x={80} y={20} textAnchor=\"middle\"/>\n            <VictoryAxis\n                dependentAxis\n                tickValues={ticks}\n                />\n            <VictoryAxis\n                independentAxis\n                tickValues={[\"1 kyu\", \"2 kyu\", \"3 kyu\", \"4 kyu\", \"5 kyu\", \"6 kyu\", \"7 kyu\", \"8 kyu\"]}\n                />\n            <VictoryBar horizontal\n                labels={({datum})  => datum.y}\n                labelComponent={<VictoryLabel/>}\n                barRatio = {0.8}\n                barWidth= {20}\n                height= {400}\n                style={{\n                    labels: { fontSize: \"16\"},\n                    data: { fill: \"#cc3939\" },\n                    }}\n                data={plotData.dataPoints}\n            />\n        </VictoryChart>\n    )\n}\n","import React from 'react'\nimport { VictoryGroup, VictoryBar, VictoryChart, VictoryLegend, VictoryTooltip } from 'victory'\nimport styled from 'styled-components'\n\nexport default function VictoryCollapsed({ plotList }) {\n    console.log(plotList[0].dataPoints)\n    const barWidth = 8\n    const offSet = 10\n    const domainPadding = offSet * (plotList.length/2)\n    const plotHeight = (barWidth + offSet/2) * 8 * plotList.length + 80\n\n    return (\n        <ChartContainer>\n        <VictoryChart padding={0, 50} height={plotHeight} domainPadding={domainPadding}>   \n            <VictoryLegend \n                y={10}\n                x={10}\n                padding= {100}\n                orientation=\"horizontal\"\n                colorScale=\"red\"\n                data = {plotList.map(pd => { return {name: pd.language}})}\n                />\n            <VictoryGroup offset={offSet} colorScale=\"red\">\n                {plotList.map(pd => <VictoryBar\n                    key ={pd.language}\n                    sortKey=\"x\"\n                    sortOrder=\"descending\"\n                    horizontal \n                    barWidth={barWidth} \n                    data = {pd.dataPoints} \n                    labels={({ datum }) => datum.longLabel}\n                    labelComponent={<VictoryTooltip/>}/>)}\n            </VictoryGroup>\n            \n        </VictoryChart>\n        </ChartContainer>\n        \n    )\n}\n\n\nconst ChartContainer = styled.div`\n    width: 80%;\n    margin: auto\n`","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport PlotMenu from './PlotMenu';\nimport { UserContext } from '../userAuth/UserContext'\nimport VictoryPlot from './VictoryPlot'\nimport VictoryCollapsed from './VictoryCollapsed';\n\nexport default function PlotSection({ languages, userPlots, setUserPlots }) {\n\n    const [isCollapsed, setIsCollapsed] = useState(false)\n    const setCollapsed = () =>setIsCollapsed(true)\n    const setNotCollapsed = () => setIsCollapsed(false)\n    const userSummary = useContext(UserContext)[0]\n    const baseUrl = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_GET_USER\n    const plotsUrl = process.env.REACT_APP_GET_PLOT\n\n    const urlList = languages.map(language => baseUrl + userSummary.username + plotsUrl + language)\n\n    useEffect(() => {\n        if (userPlots.length === 0){\n            urlList.forEach(url => {\n                axios({\n                    method: 'get',\n                    url: url\n                })\n                .then(resp => setUserPlots(prev => [...prev, resp.data]))\n                .catch(error => alert(\"Sorry, a plot could not be loaded properly\"))\n            });\n        }\n    }, [])\n\n    return (\n        <PlotContainer>\n            <Plots>\n                {!isCollapsed\n                ? <PlotGrid>\n                    {userPlots.map(p => <VictoryPlot key = {p.language} plotData = {p}/>)}\n                </PlotGrid>\n                : <VictoryCollapsed plotList={userPlots}></VictoryCollapsed>}\n            </Plots>\n            <PlotMenu isCollapsed={isCollapsed} setCollapsed={setCollapsed} setNotCollapsed={setNotCollapsed}/>\n        </PlotContainer>\n    )\n}\n\nconst Plots = styled.div`\n    width: 80%;\n    margin:auto\n`\n\nconst PlotGrid = styled.div`\n    margin:auto;\n    display: grid;\n    gap: 1em;\n    grid-template-columns: 1fr 1fr;\n    width: 90%;\n`\n\nconst PlotContainer = styled.div`\n    position: relative;\n    left: max(20%, 360px);\n    margin: 4em 0;\n    width: calc(100% - max(20%, 360px));\n    display:flex\n`","import React from 'react'\nimport styled from 'styled-components'\nimport Chip from '@material-ui/core/Chip'\nimport Loader from \"react-loader-spinner\";\n\nexport default function UserOverview({ loadedLanguages, userSummary }) {\n    const loadingIcon = <Loader type=\"ThreeDots\" color=\"black\" height={26} width={26} ></Loader>\n\n    return (\n        <OverView>\n            <Data>\n                <Name>\n                    <StyledA \n                        href={process.env.REACT_APP_CW_USER + userSummary.username} \n                        target=\"_blank\">{userSummary.username}</StyledA>\n                </Name>\n                {userSummary.name && <p>Name: {userSummary.name} </p>}\n                {userSummary.clan && <p>Clan: {userSummary.clan}</p>}\n                <p>Honor: {userSummary.honor}</p>\n                <p>Position: #{userSummary.leaderboardPosition}</p>\n                <p>Completed: {userSummary.totalCompleted}</p>\n                {userSummary.skills.length > 0 && <p>Skills: {userSummary.skills.join(\", \")}</p>}\n            </Data>\n            \n            <Chip  style={avgRankChip} label={userSummary.overallRank.rankName}></Chip>\n            <Languages>\n                {userSummary.languageRanks.map(r => <Chip \n                                                        style={loadedLanguages.includes(r.language) ? rankChip : loadingChip} \n                                                        key={r.language} \n                                                        label={`${r.rankName} / ${r.language}`} \n                                                        icon={loadedLanguages.includes(r.language) ? undefined : loadingIcon}></Chip>)}\n            </Languages>\n        </OverView>\n    )\n}\n\n\nconst OverView = styled.div`\n    position: fixed;\n    top:50px;\n    bottom: 0;\n    background-color: rgb(33, 32, 32);\n    color: #f0f0f0;\n    width: max(20%, 360px);\n    min-height: 100vh;\n    padding: 0 2em;\n    overflow: auto\n`\n\nconst Data = styled.div`\n    margin-top: 1em;\n    width: 300px;\n    word-break: break-all; \n    word-wrap: break-word;\n`\n\nconst Name = styled.div`\n    height: 2.5em;\n    line-height: 2.5em;\n    font-size: 1.5em;\n`\nconst StyledA = styled.a`\n    width: 60%;\n    font-weight: bold;\n    color: #f0f0f0;\n    text-decoration: none;\n    overflow: hidden;\n    &:visited {\n        color: #f0f0f0;\n        text-decoration: none;\n    }\n    &:hover {\n        color: #eb4034;\n        font-size: 1.1em; \n    }\n`\n\nconst Languages = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column\n`\n\nconst rankChip = { \n    fontSize: \"1.2em\",\n    backgroundColor: \"gray\", \n    marginTop: \"1em\"\n}\n\nconst loadingChip = { \n    fontSize: \"1.2em\",\n    backgroundColor: \"#d65c54\", \n    marginTop: \"1em\"\n}\n\nconst avgRankChip = {\n    fontSize: \"1.2em\",\n    backgroundColor: \"#d9392e\", \n    marginTop: \"1em\",\n    width: \"100%\"\n}\n","import React, { useContext } from 'react';\nimport PlotSection from './PlotSection';\nimport UserOverview from './UserOverview';\nimport {UserContext} from '../userAuth/UserContext'\nimport { Redirect } from 'react-router';\nimport styled from 'styled-components'\n\nexport default function Stats() {\n\n    const user = useContext(UserContext)[0]\n    const [userPlots, setUserPlots] = useContext(UserContext).slice(2,4)\n\n    const loadedLanguages = () => {\n        return userPlots.map(plot => plot.language)\n    }\n\n    return (\n        <React.Fragment>\n            {Object.keys(user).length > 0\n            ? <StatsContainer>\n                <UserOverview loadedLanguages={loadedLanguages()} userSummary={user}/>\n                <PlotSection \n                    userPlots={userPlots} \n                    setUserPlots={setUserPlots}\n                    languages={(user.languageRanks).map(lr => lr.language)}/>\n            </StatsContainer>\n            : <Redirect to='/'></Redirect>\n            }\n        </React.Fragment>\n    )\n}\n\nconst StatsContainer = styled.div`\n    display: flex;\n    position: relative;\n    top: 50px;\n    height: 100%\n`","import React, { useState, useRef, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { UserContext } from './UserContext';\n\nexport default function LandingPage() {\n\n    const userUrl = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_GET_USER\n    const [toRedirect, setToRedirect] = useState(false)\n    const usernameRef = useRef()\n    const setUser = useContext(UserContext)[1]\n\n    const getUser = () => {\n        axios({\n            method: 'get',\n            url: userUrl + usernameRef.current.value\n        })\n        .then(response => {\n            setUser(response.data)\n            setToRedirect(true)\n        })\n        .catch(error => {\n            alert(`Codewars username ${usernameRef.current.value} does not exist!`)\n        })\n    }\n\n\n    return (\n        <React.Fragment>\n            {toRedirect \n            ? <Redirect to=\"/stats-page\" />\n            :\n            <React.Fragment>\n            <TopPanel> \n                <div><h1>Welcome to Codewars Plotter!</h1></div>\n            </TopPanel>\n            <LandingContainer>\n                <p>Visualize your performance on Codewars and browse completed katas!</p>\n                <p> The site uses the public endpoints of the <StyledA href={process.env.REACT_APP_CW_API} target=\"_blank\">Codewars API</StyledA></p>\n                <RegFormContainer>\n                    <TextField style={{ textAlign: \"center\"}} inputRef={usernameRef} label=\"Codewars username\"></TextField>\n                    <Button style={{ backgroundColor: \"#d9392e\", width: \"50%\", margin: \"1em auto\" }} onClick={getUser}>Let's see!</Button>\n                </RegFormContainer>\n            </LandingContainer>\n            </React.Fragment>\n            }\n        </React.Fragment>\n    )\n}\n\nconst LandingContainer = styled.div`\n    position: relative;\n    top: 30vh;\n    width: 700px;\n    margin: auto;\n    padding: 2em;\n    text-align: center;\n    \n`\nconst TopPanel = styled.div`\n    position:fixed;\n    top: 0;\n    margin-top: 0;\n    width: 100%;\n    height: 30vh;\n    background-color: rgb(33, 32, 32);\n    color: #f0f0f0;\n    text-align: center;\n    line-height: 30vh;\n`\n\nconst RegFormContainer = styled.div`\n    width: 50%;\n    margin: auto;\n    text-align:center;\n`\nconst StyledA = styled.a`\n    width: 60%;\n    font-weight: bold;\n    color: #f0f0f0;\n    text-decoration: none;\n    overflow: hidden;\n    &:visited {\n        color: #f0f0f0;\n        text-decoration: none;\n    }\n    &:hover {\n        color: #eb4034;\n    }\n`","import React, { useContext, useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { UserContext } from './userAuth/UserContext'\nimport styled from 'styled-components'\n\nexport default function Navbar() {\n\n    const [userSummary, setUserSummary, userPlots, setUserPlots, userCompleted, setUserCompleted] = useContext(UserContext)\n    const [isVisible, setIsVisible] = useState(Object.keys(userSummary).length !== 0)\n    const deleteUser = () => {\n        setUserSummary({})\n        setUserPlots([])\n        setUserCompleted([])\n    }\n    \n    useEffect(() => {\n        setIsVisible(Object.keys(userSummary).length !== 0)\n    }, [userSummary])\n\n    return (\n        <React.Fragment>\n            {isVisible && <NavContainer>\n                <LinkContainer>\n                    <StyledLink onClick={deleteUser} to=\"/\">Log out</StyledLink>\n                    <StyledLink to=\"/stats-page\">Statistics</StyledLink>\n                    <StyledLink to=\"/kata-finder\">Kata finder</StyledLink>\n                </LinkContainer>\n                </NavContainer>\n            }\n        </React.Fragment>\n    )\n}\n\n\nconst NavContainer = styled.div`\n    background-color: black;\n    height: 50px;\n    position:fixed;\n    width: 100%;\n    z-index: 1\n`\n\nconst StyledLink = styled(Link)`\n    color: white;\n    text-decoration: none;\n    font-weight: bold;\n    line-height:50px;\n    & :visited {\n        color: white;\n        text-decoration: none;\n    }\n`\n\nconst LinkContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: max(20%, 360px);\n    padding: 0 2em\n`","import React from 'react'\nimport styled from 'styled-components'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { FaRegTimesCircle } from 'react-icons/fa';\n\n\nexport default function SelectPanel(props) {\n    const {type, opts, filterState, filterChange, deleteFilter, multi} = props\n    \n    return (\n        <Panel>\n            <FormControl style={{ 'width': '100%', background: \"gray\", paddingLeft: \"0.5em\", color: \"black\"}}>\n                <InputLabel \n                    style={{ paddingLeft: \"0.5em\", color: \"black\"}} \n                    id={type}>{type}</InputLabel>\n                <Select \n                    style={{ paddingLeft: \"0.5em\", color: \"black\"}}\n                    name={type} \n                    labelId={type}\n                    multiple={multi} \n                    value={filterState[type]} \n                    onChange={filterChange}>\n                        {opts.map(o => <MenuItem key={o} value={o}>{o}</MenuItem>)}\n                </Select>\n            </FormControl>\n            <DelIcon size={25} name={type} onClick={() => deleteFilter(type)} />\n        </Panel>\n    )\n}\n\nconst DelIcon = styled(FaRegTimesCircle)`\n    margin-left: 1em;\n    cursor: pointer;\n`\nconst Panel = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: baseline;\n    margin-top: 1em;\n`","export const byLanguages = (kata, state) => {\n    if (state.languages.length === 0) return true\n    return state.languages.every(lang => kata.completedLanguages.includes(lang))\n}\n\nexport const byRank = (kata, state) => {\n    if (state.rank.length === 0) return true;\n    return kata.rank === state.rank\n}\n\nexport const byTitle = (kata, state) => {\n    if (state.title.length <= 1) return true\n    const regExp = new RegExp('.*' + state.title.toLowerCase() + '.*')\n    return regExp.test(kata.name.toLowerCase())\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl';\nimport { FaRegTimesCircle } from 'react-icons/fa'\nimport styled from 'styled-components'\n\nexport default function TextPanel({ filterState, handleTitleFilterChange, deleteFilter, type}) {\n    return (\n        <Panel>\n            <FormControl style={{ 'width': '100%', background: \"gray\", paddingLeft: \"0.5em\", color: \"black\"}}>\n                <TextField \n                    label={type}\n                    value={filterState.title} \n                    onChange={handleTitleFilterChange} />\n                </FormControl>\n            <DelIcon size={25} onClick={() => deleteFilter(\"title\")}></DelIcon>\n        </Panel>\n    )\n}\n\nconst DelIcon = styled(FaRegTimesCircle)`\n    margin-left: 1em;\n    cursor: pointer;\n`\nconst Panel = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: baseline;\n`","import React, { useContext, useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button';\nimport SelectPanel from './SelectPanel'\nimport styled from 'styled-components'\nimport { UserContext } from '../userAuth/UserContext';\nimport { byLanguages, byRank, byTitle } from '../../util/filters'\nimport TextPanel from './TextPanel';\n\n\n\nexport default function Menu({isLoading, filteredLength, setFiltered, setPage}) {\n\n    const userSummary = useContext(UserContext)[0]\n    const userCompleted = useContext(UserContext)[4]\n    const [filterState, setFilterState] = useState({\"rank\": '', \"languages\": [], \"title\": []})\n\n    const languageOptions = userSummary.languageRanks.map(r => r.language)\n    const rankOptions = [\"1 kyu\", \"2 kyu\", \"3 kyu\", \"4 kyu\", \"5 kyu\", \"6 kyu\", \"7 kyu\", \"8 kyu\"]\n    const filters = [byLanguages, byRank, byTitle]\n    \n    const handleFilterChange = (event) => setFilterState(prev => ({ ...prev, [event.target.name]: event.target.value}))\n    const handleTitleFilterChange = (event) => setFilterState(prev => ({ ...prev, \"title\": event.target.value}))\n    const resetFilterState = () => setFilterState({\"rank\": '', \"languages\": [], \"title\": []})\n    const deleteFilter = (which) => setFilterState(prev => ({...prev, [which]: which === \"rank\" ? '' : []}))\n\n    useEffect(() => {\n        let filteredList = userCompleted.filter(kata => filters.every(f => f(kata, filterState)))\n        setFiltered(filteredList)\n        setPage(0)\n    }, [filterState])\n\n    return (\n        <FilterMenu>\n            <TextPanel \n                filterState={filterState} \n                handleTitleFilterChange={handleTitleFilterChange} \n                deleteFilter={deleteFilter}\n                type=\"title\"></TextPanel>\n            <SelectPanel type=\"languages\" \n                        opts ={languageOptions} \n                        filterState={filterState} \n                        filterChange={handleFilterChange}\n                        deleteFilter={deleteFilter}\n                        multi={true}></SelectPanel>\n            <SelectPanel type=\"rank\" \n                        opts ={rankOptions} \n                        filterState={filterState} \n                        filterChange={handleFilterChange}\n                        deleteFilter={deleteFilter}\n                        multi={false}></SelectPanel>\n            <Button style={{ backgroundColor: \"#d9392e\", width: \"50%\", margin: \"1em auto\"}} onClick={resetFilterState}>Reset all</Button>\n            <Feedback>{isLoading ? \"loading ...\" : filteredLength + \" katas found\"}</Feedback>\n        </FilterMenu>\n    )\n}\n\n\nconst FilterMenu = styled.div`\n    position: fixed;\n    min-height: 100vh;\n    color: #f0f0f0;\n    background-color: rgb(33, 32, 32);\n    padding: 2em 2em;\n    width: max(20%, 360px);\n    display: flex;\n    flex-direction: column;\n`\n\nconst Feedback = styled.div`\n    margin-top: 2em;\n    font-size: 1.2em;\n    color: #f0f0f0;\n    width: 100%;\n    text-align: center\n`","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from \"react-icons/bs\";\nimport Chip from '@material-ui/core/Chip'\n\nexport default function KataDescription({ kata }) {\n\n    const [visible, setVisible] = useState(false)\n    const toggleVisibility = () => setVisible(prev => !prev)\n\n    return (\n        <KataContainer visible={visible}>\n            <Header>\n                <StyledA href={kata.url} target=\"_blank\">{kata.name}</StyledA>\n                <Data>\n                    <div>{kata.rank}</div>\n                    <div>{kata.completedAt.substring(0, kata.completedAt.indexOf(\"T\"))}</div>\n                </Data>\n                {visible ? <Icon><BsFillCaretUpFill onClick={toggleVisibility}/></Icon> : <Icon><BsFillCaretDownFill onClick={toggleVisibility}/></Icon>}\n            </Header>\n            <Details visible={visible}>\n                <Chips>{kata.completedLanguages.map(lang => <Chip style={langChip} label={lang} key={lang} />)}</Chips>\n                <Chips>{kata.tags.map(tag => <Chip style={tagChip} label={tag} key={tag} />)}</Chips>\n                \n            </Details>\n        </KataContainer>\n    )\n}\n\nconst Header = styled.div`\n    display: flex;\n    background-color: rgb(60, 60, 60);\n    color: white;\n    height: 2em;\n    line-height: 2em;\n    padding: 0 1em;\n    justify-content: space-between;\n\n`\n\nconst StyledA = styled.a`\n    width: 60%;\n    font-weight: bold;\n    color: #f0f0f0;\n    text-decoration: none;\n    overflow: hidden;\n    &:visited {\n        color: #f0f0f0;\n        text-decoration: none;\n    }\n    &:hover {\n        color: #eb4034;\n        font-size: 1.1em; \n    }\n`\n\nconst Details = styled.div`\n    display: ${props => props.visible ? \"block\" : \"none\"};\n    padding: 0 1em 1em 1em;\n    background-color: rgb(40, 40, 40);\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n`\n\nconst KataContainer = styled.div`\n    width: 70%;\n    display: block;\n    margin: 1em auto 0;\n`\n\nconst Icon = styled.div`\n    margin-left:auto;\n    cursor: pointer;\n    &:hover {\n        color: #eb4034;\n    }\n`\n\nconst Data = styled.div`\n    width: 30%;\n    display: flex;\n    justify-content: space-between;\n`\n\nconst Chips = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n\n`\n\nconst langChip = { \n    backgroundColor: \"#d9392e\",\n    marginTop: \"1em\", \n    marginRight: \"1em\" }\n\nconst tagChip = { \n    backgroundColor: \"gray\", \n    marginTop: \"1em\", \n    marginRight: \"1em\" }","import React from 'react'\nimport styled from 'styled-components'\nimport KataDescription from './KataDescription'\nimport { FaAngleRight, FaAngleLeft } from 'react-icons/fa'\n\nexport default function KataList({ filtered, page, setPage }) {\n\n    const itemNumber = 10\n    const pageUp = () => {\n        if (filtered.length > (page + 1) * itemNumber) setPage(prev => prev + 1)\n    }\n    const pageDown = () => {\n        if (page != 0) setPage(prev => prev - 1)\n    }\n\n    return (\n        <KataContainer>\n            {filtered.length !== 0 &&\n                <React.Fragment>\n                    {filtered.slice(page * itemNumber, page * itemNumber + itemNumber).map(k => <KataDescription key={k.codewarsId} kata = {k}/>)}\n                    <Chevrons>\n                        <FaAngleLeft onClick={pageDown}></FaAngleLeft>\n                        <div>{page + 1}</div>\n                        <FaAngleRight onClick={pageUp}></FaAngleRight>\n                    </Chevrons>\n                </React.Fragment>}\n        </KataContainer>\n    )\n}\n\nconst KataContainer = styled.div`\n    position: relative;\n    left: max(20%, 360px);\n    width: calc(100% - max(20%, 360px));\n    margin-top: 2em;\n    margin: 2 auto;\n`\n\nconst Chevrons = styled.div`\n    display: flex;\n    width: 20%;\n    margin: 4em auto;\n    justify-content: space-evenly;\n    align-items: baseline\n`","import axios from 'axios';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../userAuth/UserContext';\nimport styled from 'styled-components'\nimport Menu from './Menu'\nimport KataList from './KataList'\n\nexport default function KataFinder() {\n    \n    const userSummary = useContext(UserContext)[0]\n    const [userCompleted, setUserCompleted] = useContext(UserContext).slice(4,6)\n    const [filtered, setFiltered] = useState([])\n    const [isLoading, setIsLoading] = useState(userCompleted.length > 0 ? false: true)\n    const [page, setPage] = useState(0)\n\n    useEffect(() => {\n        if (userCompleted.length === 0) fetchAllKatas()\n    }, [])\n\n    const fetchAllKatas = () => {\n        const baseUrl = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_GET_USER\n        const url = baseUrl + userSummary.username + process.env.REACT_APP_GET_KATAS\n        axios.get(url)\n            .then(response => {\n                setUserCompleted(response.data)\n                setFiltered(response.data)\n                setIsLoading(false)\n            })\n            .catch(error => alert(\"Username does not exist\"))\n    }\n\n    return (\n        <FinderContainer>\n            <Menu isLoading={isLoading} filteredLength={filtered.length} setFiltered={setFiltered} setPage={setPage}></Menu>\n            <KataList filtered={filtered} page={page} setPage={setPage}/>\n        </FinderContainer>\n\n    )\n}\n\nconst FinderContainer = styled.div`\n    display:flex;\n    width: 100%;\n    min-height: calc(100vh - 50px);\n    position: relative;\n    top: 50px\n`\n","import Stats from './components/statistics/Stats';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport LandingPage from './components/userAuth/LandingPage';\nimport Navbar from './components/Navbar';\nimport KataFinder from './components/katafinder/KataFinder';\nimport { UserProvider } from './components/userAuth/UserContext';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserProvider>\n        <Router>\n          <Route path=\"/\" component={Navbar}/>\n          <Route exact path=\"/\" component={LandingPage}/>\n          <Route path=\"/stats-page\" component={Stats} />\n          <Route path=\"/kata-finder\" component={KataFinder} />\n        </Router>\n      </UserProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}